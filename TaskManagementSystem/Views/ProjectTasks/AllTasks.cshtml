@model IEnumerable<TaskManagementSystem.Models.ProjectTask>

@{
    ViewBag.Title = "AllTasks";
}

<h2>AllTasks</h2>

<a href="@Url.Action("Index", "Notifications")">
    Notifications(@ViewBag.NotificationCount)
</a>
<br />
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ApplicationUser.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Project.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompletionPercentage)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsCompleted)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Comments)
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ApplicationUser.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Project.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CompletionPercentage)
            <br />
            @using (Html.BeginForm("UpdateCompletedPercentage", "ProjectTasks", new { taskId = item.Id }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(modelItem => item.CompletionPercentage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextArea("percentage")
                            @Html.HiddenFor(modelItem => item.Id)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
            
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsCompleted)
            <br />
            <div class="col-md-10">
                <p>Mark it completed: </p>
                <div class="checkbox">
                    <a href="@Url.Action("MarkAsCompleted", "ProjectTasks" , new { taskId = item.Id })">
                        @Html.EditorFor(modelItem => item.IsCompleted)
                    </a>
                </div>
            </div>
        </td>

        <td>
            @foreach (var comment in item.Comments)
            {
                <div class="">
                    @if (comment.Flag == TaskManagementSystem.Models.Flag.Urgent)
                    {
                        <p>Urget: @comment.Content</p>
                    }
                    else
                    {
                        <p>@comment.Content</p>
                    }
                </div>
            }

            <br />
            @if (item.IsCompleted)
            {
                using (Html.BeginForm("AddCommentOrUrgentNote", "ProjectTasks", new { taskId = item.Id, flag = "None" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="">
                        @Html.TextArea("content", new { @class = "" })
                        @Html.HiddenFor(modelItem => item.Id)
                    </div>
                    <div>
                        <button type="submit" class="">Add Comment</button>
                    </div>
                }

                <br />
            }
            else
            {
                <div>
                    @using (Html.BeginForm("AddCommentOrUrgentNote", "ProjectTasks", new { taskId = item.Id, flag = "Urgent" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="">
                            @Html.TextArea("content", new { @class = "" })
                            @Html.HiddenFor(modelItem => item.Id)
                        </div>
                        <div>
                            <button type="submit" class="">Add Urgent Note</button>
                        </div>
                    }
                </div>
            }
        </td>
    </tr>
}

</table>