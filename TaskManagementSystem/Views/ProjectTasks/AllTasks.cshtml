@model IEnumerable<TaskManagementSystem.Models.ProjectTask>

@{
    ViewBag.Title = "AllTasks";
}

<div class="notification">
    <div class="one"><h2>All Tasks</h2></div>
    <div class="two">
        <a href="@Url.Action("Index", "Notifications", new { style = "color: white;text-decoration:none;margin-left:100%" })" style="font-size:20px">
            <i class="fa fa-bell"></i>(@ViewBag.NotificationCount)
        </a>
    </div>
</div>
<br />
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ApplicationUser.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Project.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompletionPercentage)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsCompleted)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Comments)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ApplicationUser.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                <div class="prog">
                    <div class="percentages">
                        @Html.DisplayFor(modelItem => item.CompletionPercentage)%
                    </div>
                    <div class="bar">
                        <progress max="100" value="@item.CompletionPercentage"></progress>
                    </div>
                </div>
                <br />
                @using (Html.BeginForm("UpdateCompletedPercentage", "ProjectTasks", new { taskId = item.Id }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <b style="padding-left:15px">Update Percentages</b>
                            <div class="col-md-10">
                                @Html.TextArea("percentage")
                                @Html.HiddenFor(modelItem => item.Id)
                            </div>
                        </div><div class="form-group">
                            <button type="submit" class="question"><p class="link"> Save </p></button>
                        </div>
                    </div>
                }

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsCompleted)
                <br />
                <div class="col-md-10">
                    <p>Mark it completed: </p>
                    <div class="checkbox">
                        <a href="@Url.Action("MarkAsCompleted", "ProjectTasks", new { taskId = item.Id })">
                            @Html.EditorFor(modelItem => item.IsCompleted)
                        </a>
                    </div>
                </div>
            </td>

            <br />
            <td>
                @foreach (var comment in item.Comments)
                {
                    <div class="">
                        @if (comment.Flag == TaskManagementSystem.Models.Flag.Urgent)
                        {
                            <p>Urget: @comment.Content</p>
                        }
                        else
                        {
                            <p>@comment.Content</p>
                        }
                    </div>
                }

                <br />
                @if (item.IsCompleted)
                {
                    using (Html.BeginForm("AddCommentOrUrgentNote", "ProjectTasks", new { taskId = item.Id, flag = "None" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="">
                            @Html.TextArea("content", new { @class = "" })
                            @Html.HiddenFor(modelItem => item.Id)
                        </div>
                        <div>
                            <button type="submit" class="question"><p class="link"> Add Comment </p></button>
                        </div>
                    }
                    <br />
                }
                else
                {
                    <div>
                        @using (Html.BeginForm("AddCommentOrUrgentNote", "ProjectTasks", new { taskId = item.Id, flag = "Urgent" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="">
                                @Html.TextArea("content", new { @class = "" })
                                @Html.HiddenFor(modelItem => item.Id)
                            </div>
                            <div>
                                <button type="submit" class="question"><p class="link"> Add Urgent Note </p></button>
                            </div>
                        }
                    </div>
                }
            </td>
        </tr>
    }
</table>